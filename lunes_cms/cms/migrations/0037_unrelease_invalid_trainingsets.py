# Generated by Django 3.2.12 on 2022-03-12 18:27
from django.conf import settings
from django.db import migrations
from django.db.models import Count, Q


# pylint: disable=unused-argument
def unrelease_invalid_trainingsets(apps, schema_editor):
    """
    Unrelease existing invalid trainingsets in the database

    :param apps: The configuration of installed applications
    :type apps: ~django.apps.registry.Apps

    :param schema_editor: The database abstraction layer that creates actual SQL code
    :type schema_editor: ~django.db.backends.base.schema.BaseDatabaseSchemaEditor
    """
    # Get model instead of importing to support historic migration even if the TrainingSet gets changed or deleted
    TrainingSet = apps.get_model("vocgui", "TrainingSet")
    # Get queryset of all invalid trainingsets in the database
    queryset = TrainingSet.objects.annotate(
        document_count=Count(
            "documents",
            filter=Q(documents__document_image__confirmed=True),
            distinct=True,
        )
    ).filter(document_count__lt=settings.TRAININGSET_MIN_DOCS, released=True)
    # Store ids for info message
    ids = [ts.id for ts in queryset]
    # Unrelease training sets
    queryset.update(released=False)
    # Print info message
    if ids:
        print(
            f"\n    â†³ Unreleased training sets with ids {ids} because they contain less "
            f"than {settings.TRAININGSET_MIN_DOCS} vocabulary words with confirmed images...",
            end="",
        )


class Migration(migrations.Migration):
    """
    Migration to unrelease existing invalid trainingsets in the database
    """

    dependencies = [
        ("vocgui", "0036_auto_20211204_1252"),
    ]

    operations = [
        migrations.RunPython(unrelease_invalid_trainingsets),
    ]
