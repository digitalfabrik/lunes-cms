# Generated by Django 3.2.13 on 2022-06-29 10:01

from django.db import migrations, models
from ..models import Document, Static

# pylint: disable=unused-argument
def convert_word_type(apps, schema_editor):
    """
    Alter the word type field values from string to integer

    :param apps: The configuration of installed applications
    :type apps: ~django.apps.registry.Apps

    :param schema_editor: The database abstraction layer that creates actual SQL code
    :type schema_editor: ~django.db.backends.base.schema.BaseDatabaseSchemaEditor
    """
    document_dict = Static.word_type_choices
    document_bulk_update_list = []

    Document = apps.get_model("cms", "Document")
    for document in Document.objects.all():
        for key, value in document_dict:
            if document.word_type == value:
                document.word_type = key
                document.save()
                document_bulk_update_list.append(document)


def forward_word_type_conversion(apps, schema_editor):
    """
    Alter the word type field values from string to integer

    :param apps: The configuration of installed applications
    :type apps: ~django.apps.registry.Apps

    :param schema_editor: The database abstraction layer that creates actual SQL code
    :type schema_editor: ~django.db.backends.base.schema.BaseDatabaseSchemaEditor
    """
    Document = apps.get_model("cms", "Document")
    db_alias = schema_editor.connection.alias
    Document.objects.using(db_alias).bulk_update(
        word_type=Document.objects.word_type.keys()
    )


def reverse_word_type_conversion(apps, schema_editor):
    Document = apps.get_model("myapp", "Document")
    db_alias = schema_editor.connection.alias
    Document.objects.using(db_alias).filter(
        word_type=Document.objects.word_type.values()
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("cms", "0007_document_created_by_link"),
    ]

    operations = [
        migrations.AlterField(
            model_name="document",
            name="word_type",
            field=models.IntegerField(
                choices=Static.word_type_choices,
                default=0,
                verbose_name="word type",
            ),
        ),
        migrations.RunPython(convert_word_type, migrations.RunPython.noop),
    ]
